name: Destroy the Infinity Pool Application
env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  ENVIRONMENT: dev
  DEPLOYMENT_NAME: infinity-pool
  DEPLOYMENT_KEY: infinity-pool-dev
  TERRAFORM_VERSION: 1.11.2
  TERRAGRUNT_VERSION: 0.75.10
on:
  workflow_dispatch:  # This makes the workflow manually triggerable

jobs:
  destroy-infra:
    name: Destroying the Infrastructure!
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository with the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      # Configure AWS Credentials. See: https://github.com/aws-actions/configure-aws-credentials
      - name: Configure AWS credentials
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          output-credentials: true
      - name: Set AWS Account ID
        run: echo AWS_ACCOUNT_ID=${{ steps.aws-credentials.outputs.aws-account-id}} >> $GITHUB_ENV

      # DELETE ECR Images
      - name: Delete All ECR Images
        run: |
          echo "Listing images in repo ${{ env.DEPLOYMENT_KEY }}"
          IMAGES=$(aws ecr list-images --repository-name "${{ env.DEPLOYMENT_KEY }}" --query 'imageIds[*]' --output json)
          if [ "$IMAGES" != "[]" ]; then
            echo "Deleting images from ${{ env.DEPLOYMENT_KEY }}"
            # Option 1: Using a temporary file
            echo "$IMAGES" > images.json
            aws ecr batch-delete-image --repository-name "${{ env.DEPLOYMENT_KEY }}" --image-ids file://images.json
            rm images.json
          else
            echo "No images found in ${{ env.DEPLOYMENT_KEY }} to delete."
          fi

      # DESTROY
      # https://github.com/gruntwork-io/terragrunt-action
      - name: Terragrunt Destroy
        uses: gruntwork-io/terragrunt-action@v2.1.5
        with:
          tf_version: ${{ env.TERRAFORM_VERSION }}
          tg_version: ${{ env.TERRAGRUNT_VERSION }}
          tg_dir: terragrunt
          tg_command: destroy -auto-approve